name: RnD Build Pipeline

on:
  push:
    branches: [RnD]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.x'
  PROD_PYPI_NAME: 'sequence'
  TEST_PYPI_NAME: 'ssequence'

jobs:
  build-rnd:
    name: Build RnD Package
    runs-on: ubuntu-latest
    outputs:
      dev_version: ${{ steps.version.outputs.dev_version }}
      commit_hash: ${{ steps.version.outputs.commit_hash }}

    strategy:
      matrix:
        target: [pypi, testpypi]

    steps:
      - name: Checkout RnD branch
        uses: actions/checkout@v5
        with:
          persist-credentials: 'true'
          ref: RnD

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pypa/build
        run: >-
          python3 -m
          pip install 
          build
          --user

      - name: Generate development version
        id: version
        run: |
          GIT_HASH=$(git rev-parse --short HEAD)
          CURRENT_VERSION=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
          
          DEV_VERSION="${CURRENT_VERSION}.dev0${GIT_HASH}"
          
          echo "dev_version=${DEV_VERSION}" >> $GITHUB_OUTPUT
          echo "commit_hash=${GIT_HASH}" >> $GITHUB_OUTPUT
          echo "DEV_VERSION=${DEV_VERSION}" >> $GITHUB_ENV
  
          echo "Building development version from RnD: ${DEV_VERSION}"

      - name: Update package configuration
        run: |
          # Update version in pyproject.toml
          sed -i "s/^version = .*/version = \"${DEV_VERSION}\"/" pyproject.toml
          
          if [ "${{ matrix.target }}" = "testpypi" ]; then
            sed -i "s/^name = \"sequence\"/name = \"ssequence\"/" pyproject.toml
          fi

      - name: Build wheel and tarball
        run: python3 -m build

      - name: Store build as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-RnD-${{ matrix.target }}-${{ steps.version.outputs.dev_version }}
          path: dist/
          retention-days: 4

  publish-rnd:
    name: Publish RnD to TestPyPI and PyPI
    needs: build-rnd
    runs-on: ubuntu-latest
    if: success()

    strategy:
      matrix:
        include:
          - target: pypi
            environment: pypi
            repository_url: https://pypi.org/p/sequence
            package_name: sequence
          - target: testpypi
            environment: testpypi
            repository_url: https://test.pypi.org/p/ssequence
            package_name: ssequence
            pypi_url: https://test.pypi.org/legacy/

    environment:
      name: ${{ matrix.environment }}
      url: ${{ matrix.repository_url }}

    permissions:
      id-token: write

    steps:
      - name: Download the builds
        uses: actions/download-artifact@v4
        with:
          name: build-RnD-${{ matrix.target }}-${{ needs.build-rnd.outputs.dev_version }}
          path: dist/

      - name: Publish dist
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ matrix.pypi_url || '' }}
          skip-existing: true
          verbose: true